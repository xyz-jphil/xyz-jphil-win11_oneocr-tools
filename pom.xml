<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.xyz-jphil</groupId>
    <artifactId>xyz-jphil-win11_oneocr-tools</artifactId>
    <version>1.0</version>

    <properties>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Depend on the API module -->
        <dependency>
            <groupId>io.github.xyz-jphil</groupId>
            <artifactId>xyz-jphil-win11_oneocr-api</artifactId>
            <version>1.0</version>
        </dependency>
        
        <!-- Pico CLI for command line interface -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.7.5</version>
        </dependency>
        
        <!-- org.json for simple JSON handling -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20240303</version>
        </dependency>
        
        <dependency>
            <groupId>io.github.xyz-jphil</groupId>
            <artifactId>xyz-jphil-luvml</artifactId>
            <version>2.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.17.2</version>
        </dependency>
        
        <!-- WebP ImageIO support with write capability -->
        <dependency>
            <groupId>io.github.darkxanter</groupId>
            <artifactId>webp-imageio</artifactId>
            <version>0.3.0</version>
        </dependency>
        
        <!-- JPEG2000 ImageIO support for PDFBox -->
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-jpeg2000</artifactId>
            <version>1.4.0</version>
        </dependency>
        
        <!-- JAI ImageIO Core (TIFF and other formats) -->
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-core</artifactId>
            <version>1.4.0</version>
        </dependency>
        
        <!-- JBIG2 ImageIO plugin for monochrome/bi-level images -->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>jbig2-imageio</artifactId>
            <version>3.0.4</version>
        </dependency>
        
        <!-- JLine for cross-platform terminal/console support -->
        <dependency>
            <groupId>org.jline</groupId>
            <artifactId>jline-terminal</artifactId>
            <version>3.24.1</version>
        </dependency>

        <!-- Lombok for reducing boilerplate -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.38</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Windows Console Unicode Output -->
        <dependency>
            <groupId>io.github.xyz-jphil</groupId>
            <artifactId>xyz-jphil-windows_console_set_unicode_output</artifactId>
            <version>1.0</version>
        </dependency>
        
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>22</source>
                    <target>22</target>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <argLine>--enable-native-access=ALL-UNNAMED,xyz.jphil.windows_console_set_unicode_output</argLine>
                </configuration>
            </plugin>
            
            <!-- Build executable JAR with dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>xyz.jphil.win11_oneocr.tools.OcrTool</mainClass>
                                </transformer>
                                <!-- CRITICAL: Merge ImageIO service provider files (META-INF/services/*) for JPEG2000 support.
                                     Without this, jai-imageio-jpeg2000 plugin won't be discovered at runtime in shaded JAR,
                                     causing "Cannot read JPEG2000 image: Java Advanced Imaging (JAI) Image I/O Tools are not installed" errors.
                                     The dependency alone isn't enough - service discovery metadata must be merged. -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>